def gamma_temperature(fluide,alpha,a):
    """ Prend en entrée la nature du fluide : 0=air, 1=kerosene, 2= melange air-kerosene,
    la richesse alpha (valant 0 pour l'air et 1 pour le kerosene pur),
    la vitesse du son a.
    Renvoi gamma(T)"""
    if fluide==0:
        Cpr=lambda T: 3.5-0.000028*T+0.0000000224*T*T+(3000*3000*a)/(T(a-1)(a-1))
        gamma=lambda T: Cpr(T)/(Cpr(T)-1)
    if fluide==1:
        Cpr=lambda T: -0.0000018373*T*T+0.00801994*T+4.47659
        gamma=lambda T: Cpr(T)/(Cpr(T)-1)
    if fluide==2:
        Cpra=lambda T: 3.5-0.000028*T+0.0000000224*T*T+(3000*3000*a)/(T(a-1)(a-1))
        Cprk=lambda T: -0.0000018373*T*T+0.00801994*T+4.47659
        Cpr=lambda T: (Cpra(T)+alpha*Cprk(T))/(alpha+1)
        gamma=lambda T: Cpr(T)/(Cpr(T)-1)
    return gamma
    
def Cp_temperature(fluide,alpha,a):
    """ Prend en entrée la nature du fluide : 0=air, 1=kerosene, 2= melange air-kerosene,
    la richesse alpha (valant 0 pour l'air et 1 pour le kerosene pur),
    la vitesse du son a.
    Renvoi Cp(T)"""
    if fluide==0:
        Cpr=lambda T: 3.5-0.000028*T+0.0000000224*T*T+(3000*3000*a)/(T(a-1)(a-1))
    if fluide==1:
        Cpr=lambda T: -0.0000018373*T*T+0.00801994*T+4.47659
    if fluide==2:
        Cpra=lambda T: 3.5-0.000028*T+0.0000000224*T*T+(3000*3000*a)/(T(a-1)(a-1))
        Cprk=lambda T: -0.0000018373*T*T+0.00801994*T+4.47659
        Cpr=lambda T: (Cpra(T)+alpha*Cprk(T))/(alpha+1)
    return Cpr
    
def primitive (f,T0,T1):
    import numpy as np
    x=np.arange(T0,t1,1)
    y=[integrate(f,T0,i) for i in x]
    return regression(x,y) #comment que je fais ca???



def turboreacteur(T1,P1,ts,tcbp,tchp,tt,alpha,lamb,WA,WF,a):
    """Modélisation d'un turboréacteur
    Hypothèses : transformations isentropiques dans compresseurs, turbines, tuyères
             variations d'énergie potentielles et cinétiques négligées (sauf l'énergie cinétique dans la tuyère)
             pas de parties mobiles saud dans compresseurs, turbines
             approximation d'Elligham dans la chambre de combustion
             air et mélange de gaz brulés modélisés par des gaz parfait
    Soufflante = 1-2
    Compresseur BP = 2-3
    Compresseur HP = 3-4
    Chambre de combustion = 4-5
    Turbine HP = 5-6
    Turbine BP = 6-7
    Melangeur = 7-8/2-8
    Tuyère = 8-9 """
    
    import scipy
    from scipy.integrate import quad
    
    #Soufflante
    f1=lambda T: gamma_temperature(0,0,a)/(T(gamma_temperature(0,0,a)-1))
    F1=primitive(f,T1,1500)
    Finv1=           # a trouver
    T2=Finv1(F1(T1)+ln(ts))
    
    #Compresseur BP
    T3=Finv1(F1(T2)+ln(tcbp))
        
    #Compresseur HP
    T4=Finv1(F1(T3)+ln(tchp))
        
    #Chambre de combustion
    DfCO2=394000
    DfH2O=280000
    DfN2=0
    DfO2=0
    DfCH4=88000
    avanct=WF/(0.012+4*0.001)
    Df=avanct(DfCO2+2*DfH2O-DfCH4)

    f2=lambda T: 287*Cp_temperature(2,alpha,a)
    F2=primitive(f,T1,1500)
    Finv2=           # a trouver
    T5=Finv2(F2(T4)-Df)

    #Turbine HP
    T6=Finv2(F2(T5)+(F2(T4)-F2(T3))*WA/(WA+WF))

    #Turbine BP
    T7=Finv2(F2(T6)+(F2(T3)-F2(T1))*WA/(WA+WF)+(F2(T1)-F2(T2))*lamb*WA/(WA+WF))

    #Mélangeur
    T8=Finv2(((WA+WF)*F2(T7)+lamb*WA*F2(T2))/(WF+WA+WA*lamb))

    #Tuyère
    T9=Finv1(F1(T8)+ln(tt))
    C9=sqrt(2+F2(T9)-F2(T8))

    #Rendement
    Pcin=(WA+lamb*WA+WF)*C9*C9/2
    Pth=(WA+WF)*(F2(T5)-F2(T4))
    Rendement=Pcin/Pth
